/*
 * Copyright (c) 2004-2005 The Trustees of Indiana University and Indiana
 *                         University Research and Technology
 *                         Corporation.  All rights reserved.
 * Copyright (c) 2004-2013 The University of Tennessee and The University
 *                         of Tennessee Research Foundation.  All rights
 *                         reserved.
 * Copyright (c) 2004-2005 High Performance Computing Center Stuttgart,
 *                         University of Stuttgart.  All rights reserved.
 * Copyright (c) 2004-2005 The Regents of the University of California.
 *                         All rights reserved.
 * Copyright (c) 2011-2012 Cisco Systems, Inc.  All rights reserved.
 * Copyright (c) 2011-2013 Inria.  All rights reserved.
 * Copyright (c) 2011-2013 Universite Bordeaux 1
 * Copyright (c) 2015      Research Organization for Information Science
 *                         and Technology (RIST). All rights reserved.
 * $COPYRIGHT$
 *
 * Additional copyrights may follow
 *
 * $HEADER$
 */

PROTOTYPE VOID graph_neighbors(COMM comm, INT rank,
			       INT maxneighbors, INT_ARRAY_OUT neighbors:maxneighbors)
{
    int c_ierr;
    MPI_Comm c_comm;
    int *tmp_neighbors = NULL;

    c_comm = PMPI_Comm_f2c(*comm);

    OMPI_FORTRAN_BIGCOUNT_ARRAY_SET(neighbors, tmp_neighbors, *maxneighbors);

    c_ierr = @INNER_CALL@(c_comm,
                          OMPI_FINT_2_INT(*rank),
                          OMPI_FINT_2_INT(*maxneighbors),
                          tmp_neighbors);
    if (NULL != ierr) *ierr = OMPI_INT_2_FINT(c_ierr);

    if (MPI_SUCCESS == c_ierr) {
        OMPI_FORTRAN_BIGCOUNT_ARRAY_COPYOUT(neighbors, tmp_neighbors, *maxneighbors);
    }
    OMPI_FORTRAN_BIGCOUNT_ARRAY_CLEANUP(neighbors, tmp_neighbors);
}
