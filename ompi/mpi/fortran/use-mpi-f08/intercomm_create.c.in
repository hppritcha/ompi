/*
 * Copyright (c) 2004-2005 The Trustees of Indiana University and Indiana
 *                         University Research and Technology
 *                         Corporation.  All rights reserved.
 * Copyright (c) 2004-2005 The University of Tennessee and The University
 *                         of Tennessee Research Foundation.  All rights
 *                         reserved.
 * Copyright (c) 2004-2005 High Performance Computing Center Stuttgart,
 *                         University of Stuttgart.  All rights reserved.
 * Copyright (c) 2004-2005 The Regents of the University of California.
 *                         All rights reserved.
 * Copyright (c) 2011-2012 Cisco Systems, Inc.  All rights reserved.
 * Copyright (c) 2015      Research Organization for Information Science
 *                         and Technology (RIST). All rights reserved.
 * $COPYRIGHT$
 *
 * Additional copyrights may follow
 *
 * $HEADER$
 */

PROTOTYPE VOID intercomm_create(COMM local_comm, INT local_leader,
			        COMM bridge_comm, INT remote_leader, 
                                INT tag,
			        COMM_OUT newintercomm)
{
    int c_ierr;
    MPI_Comm c_newcomm;
    MPI_Comm c_local_comm = PMPI_Comm_f2c (*local_comm );
    MPI_Comm c_bridge_comm = PMPI_Comm_f2c (*bridge_comm);

    c_ierr = PMPI_Intercomm_create(c_local_comm,
                                  OMPI_FINT_2_INT(*local_leader),
                                  c_bridge_comm,
                                  OMPI_FINT_2_INT(*remote_leader),
                                  OMPI_FINT_2_INT(*tag),
                                  &c_newcomm);
    if (NULL != ierr) *ierr = OMPI_INT_2_FINT(c_ierr);

    if (MPI_SUCCESS == c_ierr) {
        *newintercomm = PMPI_Comm_c2f (c_newcomm);
    }
}
