/* -*- Mode: C; c-basic-offset:4 ; indent-tabs-mode:nil -*- */
/*
 * Copyright (c) 2004-2005 The Trustees of Indiana University and Indiana
 *                         University Research and Technology
 *                         Corporation.  All rights reserved.
 * Copyright (c) 2004-2005 The University of Tennessee and The University
 *                         of Tennessee Research Foundation.  All rights
 *                         reserved.
 * Copyright (c) 2004-2005 High Performance Computing Center Stuttgart,
 *                         University of Stuttgart.  All rights reserved.
 * Copyright (c) 2004-2005 The Regents of the University of California.
 *                         All rights reserved.
 * Copyright (c) 2011-2013 Cisco Systems, Inc.  All rights reserved.
 * Copyright (c) 2013      Los Alamos National Security, LLC. All rights
 *                         reserved.
 * Copyright (c) 2015      Research Organization for Information Science
 *                         and Technology (RIST). All rights reserved.
 * Copyright (c) 2019      Triad National Security, LLC.  All rights reserved.
 *
 * $COPYRIGHT$
 *
 * Additional copyrights may follow
 *
 * $HEADER$
 */

PROTOTYPE VOID intercomm_create_from_groups(GROUP local_group, INT local_leader, GROUP remote_group,
                                            INT remote_leader, CHAR_ARRAY stringtag, INFO info, ERRHANDLER errhandler, 
                                            COMM_OUT internewcomm)
{
    int c_ierr;
    MPI_Group c_lgroup, c_rgroup;
    MPI_Comm c_intercomm;
    MPI_Info c_info;
    MPI_Errhandler c_err;

    c_lgroup = PMPI_Group_f2c(*local_group);
    c_rgroup = PMPI_Group_f2c(*remote_group);
    c_info = PMPI_Info_f2c(*info);
    c_err = PMPI_Errhandler_f2c(*errhandler);

    c_ierr = @INNER_CALL@(c_lgroup,  
                          OMPI_FINT_2_INT(*local_leader), 
                          c_rgroup,  
                          OMPI_FINT_2_INT(*remote_leader), 
                          stringtag, 
                          c_info, 
                          c_err, 
                          &c_intercomm);
    if (NULL != ierr) *ierr = OMPI_INT_2_FINT(c_ierr);

    if (MPI_SUCCESS == c_ierr) {
        *internewcomm = PMPI_Comm_c2f (c_intercomm);
    }
}
